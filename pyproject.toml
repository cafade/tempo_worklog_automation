[tool.poetry]
name = "tempo_worklog_automation"
version = "0.1.0"
description = ""
authors = ["learnin <esteban@megutierrez.site>"]
maintainers = [
]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
pydantic = { version = "^2.5.3", extras=["dotenv"] }
pydantic-settings = "^2.1.0"
pyyaml = "^6.0.1"
types-PyYAML = "^6.0.12.12"
httpx = "^0.26.0"


[tool.poetry.dev-dependencies]
pytest = "^7.2.1"
flake8 = "~4.0.1"
mypy = "^1.1.1"
isort = "^5.11.4"
pre-commit = "^3.0.1"
wemake-python-styleguide = "^0.17.0"
black = "^22.12.0"
autoflake = "^1.6.1"
pytest-cov = "^4.0.0"
anyio = "^3.6.2"
pytest-env = "^0.8.1"

[tool.isort]
profile = "black"
multi_line_output = 3
src_paths = ["tempo_worklog_automation",]

[tool.mypy]
strict = true
ignore_missing_imports = true
allow_subclassing_any = true
allow_untyped_calls = true
pretty = true
show_error_codes = true
implicit_reexport = true
allow_untyped_decorators = true
warn_unused_ignores = false
warn_return_any = false
namespace_packages = true

[tool.pytest.ini_options]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore:.*unclosed.*:ResourceWarning",
]
env = [
    "TEMPO_WORKLOG_AUTOMATION_ENVIRONMENT=pytest",
    # "TEMPO_WORKLOG_AUTOMATION_RUN_INTEGRATION_TESTS=True",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
